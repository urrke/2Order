// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2OrderLibrary;

namespace _2OrderLibrary.Migrations
{
    [DbContext(typeof(_2OrderDbContext))]
    partial class _2OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("_2OrderLibrary.Dostava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StavkaMenijaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("StavkaMenijaId");

                    b.ToTable("Dostave");
                });

            modelBuilder.Entity("_2OrderLibrary.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipKorisnika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("_2OrderLibrary.Meni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Cena")
                        .HasColumnType("real");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StavkeMenija");
                });

            modelBuilder.Entity("_2OrderLibrary.Porudzbina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StavkaMenijaId")
                        .HasColumnType("int");

                    b.Property<int?>("StoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("StavkaMenijaId");

                    b.HasIndex("StoId");

                    b.ToTable("Porudzbine");
                });

            modelBuilder.Entity("_2OrderLibrary.Recenzija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DostavaId")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<int?>("PorudzbinaId")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DostavaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PorudzbinaId");

                    b.ToTable("Recenzije");
                });

            modelBuilder.Entity("_2OrderLibrary.Sto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojMesta")
                        .HasColumnType("int");

                    b.Property<int>("KonobarId")
                        .HasColumnType("int");

                    b.Property<string>("Oznaka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Slobodan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KonobarId");

                    b.ToTable("Stolovi");
                });

            modelBuilder.Entity("_2OrderLibrary.Dostava", b =>
                {
                    b.HasOne("_2OrderLibrary.Korisnik", "Korisnik")
                        .WithMany("mojeDostave")
                        .HasForeignKey("KorisnikId");

                    b.HasOne("_2OrderLibrary.Meni", "StavkaMenija")
                        .WithMany()
                        .HasForeignKey("StavkaMenijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("StavkaMenija");
                });

            modelBuilder.Entity("_2OrderLibrary.Porudzbina", b =>
                {
                    b.HasOne("_2OrderLibrary.Korisnik", "Korisnik")
                        .WithMany("mojePorudzbine")
                        .HasForeignKey("KorisnikId");

                    b.HasOne("_2OrderLibrary.Meni", "StavkaMenija")
                        .WithMany()
                        .HasForeignKey("StavkaMenijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2OrderLibrary.Sto", "Sto")
                        .WithMany()
                        .HasForeignKey("StoId");

                    b.Navigation("Korisnik");

                    b.Navigation("StavkaMenija");

                    b.Navigation("Sto");
                });

            modelBuilder.Entity("_2OrderLibrary.Recenzija", b =>
                {
                    b.HasOne("_2OrderLibrary.Dostava", "Dostava")
                        .WithMany()
                        .HasForeignKey("DostavaId");

                    b.HasOne("_2OrderLibrary.Korisnik", "Korisnik")
                        .WithMany("mojeRecenzije")
                        .HasForeignKey("KorisnikId");

                    b.HasOne("_2OrderLibrary.Porudzbina", "Porudzbina")
                        .WithMany()
                        .HasForeignKey("PorudzbinaId");

                    b.Navigation("Dostava");

                    b.Navigation("Korisnik");

                    b.Navigation("Porudzbina");
                });

            modelBuilder.Entity("_2OrderLibrary.Sto", b =>
                {
                    b.HasOne("_2OrderLibrary.Korisnik", "Konobar")
                        .WithMany()
                        .HasForeignKey("KonobarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Konobar");
                });

            modelBuilder.Entity("_2OrderLibrary.Korisnik", b =>
                {
                    b.Navigation("mojeDostave");

                    b.Navigation("mojePorudzbine");

                    b.Navigation("mojeRecenzije");
                });
#pragma warning restore 612, 618
        }
    }
}
